<apex:page standardController="Opportunity" extensions="CloneDealCtrl" showHeader="false" standardStylesheets="false" sidebar="false" applyHtmlTag="false" applyBodyTag="false" docType="html-5.0">
<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<body style="margin:0">

  <!-- REQUIRED SLDS WRAPPER -->
  <div class="slds" ng-app="CloneDealApp" ng-controller="CloneDealCtrl" ng-init="cloneDeal()">
    
    <!-- MASTHEAD -->
    <div class="slds-page-header" role="banner">
      <div class="slds-grid">
        <div class="slds-col slds-has-flexi-truncate">
            <nav class="slds-m-bottom--xx-small" role="navigation">
                <p id="bread-crumb-label" class="slds-assistive-text">You are here:</p>
                <ol class="slds-breadcrumb slds-list--horizontal" aria-labelledby="bread-crumb-label">
                    <li class="slds-list__item slds-text-heading--label">
                        <a href="{!URLFOR($Action.Opportunity.Tab, $ObjectType.Opportunity)}">{!$ObjectType.Opportunity.labelPlural}</a>
                    </li>
                    <li class="slds-list__item slds-text-heading--label">
                        <a href="{!URLFOR($Action.Opportunity.View, Id)}">{!Opportunity.Name}</a>
                    </li>
                </ol>
            </nav>
            <div class="slds-col slds-has-flexi-truncate">
                <h1 class="slds-text-heading--medium slds-truncate" title="">Clone Deal with Products</h1>
            </div>
        </div>
        
        <div class="slds-col slds-no-flex slds-align-bottom">
            <div class="slds-button-group" role="group">
                <button class="slds-button slds-button--neutral" ng-disabled="showSpinner" ng-click="navigateToDeal(currDealId)">Back to Original Deal</button>
                <button class="slds-button slds-button--neutral" ng-disabled="showSpinner" ng-click="navigateToDeal(newDealId)" ng-show="newDealId">Open Cloned Deal</button>
            </div>
        </div>
        
      </div>
    </div>
    <!-- / MASTHEAD -->

    <!-- PRIMARY CONTENT WRAPPER -->
    <div class="slds-grid">

      <!-- ================== SPINNER MODAL ================ -->
        <div class="slds-col slds-grid" ng-show="showSpinner">
            <div class="slds-spinner--medium">
              <img src="{!URLFOR($Resource.SLDS0120, '/assets/images/spinners/slds_spinner_brand.gif')}"/>
            </div>
            <div class="slds-col slds-text-heading--small slds-m-top--small" ng-bind="spinnerText"></div>
        </div>
      

      <!-- SUCCESS/ERROR MESSAGE -->
      <div ng-show="msgText" class="slds-col slds-notify slds-notify--toast slds-box--x-small slds-theme--{{msgSeverity}}" role="alert">
          <button class="slds-button slds-button--icon-inverse slds-notify__close slds-m-right--small" ng-click="msgText = '';">
            <svg aria-hidden="true" class="slds-button__icon slds-button__icon--medium">
              <use xlink:href="{!URLFOR($Resource.SLDS0120, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
            </svg>
            <span class="slds-assistive-text">Close</span>
          </button>

          <div class="notify__content slds-grid">
            <svg aria-hidden="true" class="slds-col slds-icon slds-icon--small slds-m-right--small slds-no-flex">
              <use xlink:href="{!URLFOR($Resource.SLDS0120, '/assets/icons/utility-sprite/svg/symbols.svg#success')}"></use>
            </svg>

            <div class="slds-col slds-align-middle">
                <h2 class="slds-text-heading--small" ng-show="msgText">{{msgText}}</h2>
            </div>
          </div>
        </div>
    </div>
    
    
    <div class="slds-grid">
        <div ng-show="errorRecords.length > 0" class="slds-size--1-of-1">
            <table class="slds-table slds-table--bordered"> 
                <tr class="slds-text-heading--label">
                    <th class="slds-cell-shrink">Product Code</th>
                    <th class="slds-cell-shrink">Product Name</th>
                    <th class="slds-cell-shrink">Error</th>
                </tr>
                <tr class="slds-hint-parent" ng-repeat="err in errorRecords">
                    <td class="slds-truncate" data-label="Product Code">{{err.productCode}}</td>
                    <td class="slds-truncate" data-label="Product Name">{{err.productName}}</td>
                    <td class="slds-truncate" data-label="Error">{{err.error}}</td>
                </tr>
            </table>
        </div>
    </div>
    
  </div>
  <!-- / REQUIRED SLDS WRAPPER -->

</body>

<head>
  <title>Clone Deal with Products</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no"></meta>
  <apex:stylesheet value="{!URLFOR($Resource.SLDS0120, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
  <apex:includeScript value="{!URLFOR($Resource.Resource_Library, 'js/jquery.min.js')}" />
  <apex:includeScript value="{!URLFOR($Resource.Resource_Library, 'js/angular.min.js')}" />
  <apex:includeScript value="{!URLFOR($Resource.Resource_Library, 'js/svgxuse.js')}" />
  <script src="/soap/ajax/35.0/connection.js" type="text/javascript"></script>
  <script src="/soap/ajax/35.0/apex.js" type="text/javascript"></script>
  
  <script type="text/javascript">
    sforce.connection.sessionId = '{!$Api.Session_ID}';

    angular
      .module('CloneDealApp', [])
      .controller('CloneDealCtrl', function($scope){
        $scope.currDealId = '{!Opportunity.Id}';
        $scope.newDealId;
        $scope.errorRecords = [];
        $scope.showSpinner = true;
        $scope.spinnerText = 'Please wait...';
        $scope.msgText;
        $scope.msgSeverity;
        <!--New Scope Variable to Check Only Deal is Cloned.-->
        $scope.onlyDeal = false;
        
        $scope.navigateToDeal = function(dealId) {
            $scope.navigateToURL('/'+dealId);
        };
        
        /* Function to redirect user back to Config Detail page */
        $scope.navigateToURL = function(url) {
          var isLightningExperienceOrSf1 = ((typeof sforce != 'undefined') && sforce && (!!sforce.one));
    
          if ($scope.isLightningExperienceOrSf1)
              sforce.one.navigateToURL(url);
          else
              document.location.href = url;
        };
        
        $scope.cloneDeal = function() {
            $scope.spinnerText = "{!$Label.DealClone_CloningMsg}";
            
            CloneDealCtrl.cloneDeal($scope.currDealId, function(result, event){
                if (!event.status) {
                      $scope.$apply(function(){
                        $scope.msgText = event.message;
                        $scope.msgSeverity = 'error';
                        $scope.showSpinner = false;
                      });
                }
                else {
                    console.log('result', result);
                    var clonedDealId = result;
                    $scope.createDealProducts(clonedDealId);
                }
            });
        };
        
        $scope.createDealProducts = function(clonedDealId) {
            $scope.$apply(function(){
                $scope.newDealId = clonedDealId;
                $scope.spinnerText =  "{!$Label.DealProduct_CloningWithProdMsg}"+clonedDealId;
            });
            
            var query_result = sforce.connection.query("SELECT ID FROM OPPORTUNITYLINEITEM WHERE OPPORTUNITYID='{!Opportunity.Id}' ");
            var dealProductRecords = query_result.getArray("records");
            var dealProductIds = [];
            
            for (var i=0; i< dealProductRecords.length; i++) {
                dealProductIds.push(dealProductRecords[i].Id);
            }
            console.log(dealProductIds);
            
            var totalProductsCount = dealProductIds.length;
            
            (function cloneDealProductsRemote(rowsToProcess, errorRecords){
             
                if (typeof rowsToProcess == 'undefined' || rowsToProcess.length == 0) {
                     <!--Code modified, apply was not introduced due to which spinner was rotating infinite-->
                     $scope.$apply(function(){
                        $scope.showSpinner = false;
                        $scope.onlyDeal = true;
                        return;
                     });
                     <!--Code modified, apply was not introduced due to which spinner was rotating infinite-->
                }

                var chunkSize = 50, // Recursive batch size
                    chunkedData = rowsToProcess.splice(0, chunkSize);
                    
                CloneDealCtrl.cloneDealProducts(clonedDealId, chunkedData, function(result, event){
                    if (!event.status) {
                          $scope.$apply(function(){
                            $scope.msgText = event.message;
                            $scope.msgSeverity = 'error';
                            $scope.showSpinner = false;
                          });
                    }
                    else if (dealProductIds.length > 0) {
                        errorRecords = errorRecords.concat(result);
                        
                        $scope.$apply(function(){
                            $scope.spinnerText = "{!$Label.DealProduct_CloningWithProdMsg}"  + (totalProductsCount - dealProductIds.length) + ' / ' + totalProductsCount;
                        });
                        
                        cloneDealProductsRemote(rowsToProcess, errorRecords);
                    }
                    else {
                        $scope.errorRecords = errorRecords.concat(result);
                        
                        console.log('clone deal prod result', result);
                        console.log('clone deal prod errors', errorRecords);
                        
                        $scope.$apply(function(){
                            if (errorRecords.length > 0) {
                                $scope.msgText = "{!$Label.DealClone_ErrorMsg}";
                                $scope.msgSeverity = 'error';
                            } else {
                               <!--Message modified for different scenarios-->
                               if(!$scope.onlyDeal){
                                    $scope.msgText = "{!$Label.DealClone_SuccessMsg_WithProduct}";
                                }
                                else{
                                   $scope.msgText = "{!$Label.DealClone_SuccessMsg_WithoutProduct}"; 
                                }
                                <!--Message modified for different scenarios-->
                                $scope.msgSeverity = 'success';
                                $scope.navigateToURL('/'+clonedDealId);
                            }
                            
                            $scope.spinnerText = '';
                            $scope.showSpinner = false;
                        });
                    }
                });    
            })(dealProductIds, []);
        };
      });
  </script>
</head>

</html>
</apex:page>